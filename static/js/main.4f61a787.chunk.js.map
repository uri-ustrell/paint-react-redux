{"version":3,"sources":["components/tools/palette/color/Color.js","components/tools/palette/Palette.js","redux/actions/brushActions.js","redux/actions/actionTypes.js","redux/actions/paletteActions.js","components/tools/brushWeight/weightOption/WeightOption.js","components/tools/brushWeight/BrushWeight.js","redux/actions/weightsActions.js","components/tools/historyNavigator/stepMove/StepMove.js","redux/actions/canvasActions.js","components/tools/historyNavigator/HistoryNavigator.js","components/tools/Tools.js","components/display/canvas/Canvas.js","components/display/Display.js","components/App.js","serviceWorker.js","redux/reducers/initialState.js","redux/reducers/index.js","redux/reducers/brushReducer.js","redux/reducers/paletteReducer.js","redux/reducers/canvasReducer.js","redux/reducers/weightsReducer.js","index.js","redux/configureStore.js"],"names":["Color","color","isSelected","handleOnClick","className","style","backgroundColor","onClick","icon","faCheck","mapDispatchToProps","selectBrushColor","selectedColor","type","selectPaletteColor","loadPaletteColors","colors","connect","state","palette","useEffect","length","Object","entries","selectColor","id","hex","map","key","WeightOption","weight","handleClick","height","mapDsipatchToProps","selectWeight","selectedWeight","loadWeights","weights","selectBrushWeight","all","wg","i","StepMove","loadLines","lines","canvasHistoryStepBack","steps","canvasHistoryStepForward","faUndoAlt","size","faRedoAlt","Tools","Canvas","props","isDrawing","handleMouseDown","setState","handleMouseMove","e","point","stage","getPointerPosition","lastLine","points","x","y","brushColor","brushWeight","newLines","line","handleMouseUp","saveLines","this","stageRef","getStage","setContainer","on","prevProps","width","window","innerWidth","innerHeight","onContentMousedown","onContentMousemove","onContentMouseup","ref","node","stroke","strokeWidth","lineCap","Component","brush","canvas","Display","App","Boolean","location","hostname","match","initialState","history","past","future","rootReducer","combineReducers","action","futureLines","pastLines","historyPast","historyFuture","filter","_","ls","store","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","reduxImmutableState","configureStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4f61a787.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { FontAwesomeIcon as Icon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCheck } from \"@fortawesome/free-solid-svg-icons\";\r\nimport \"./Color.css\";\r\n\r\nconst Color = ({ color, isSelected, handleOnClick }) => (\r\n\t<div\r\n\t\tclassName=\"paint-palette-color tool-btn\"\r\n\t\tstyle={{\r\n\t\t\tbackgroundColor: color,\r\n\t\t\tcolor: color === \"#ffffff\" && \"#1b2631\"\r\n\t\t}}\r\n\t\tonClick={handleOnClick}\r\n\t>\r\n\t\t{isSelected && <Icon icon={faCheck} />}\r\n\t</div>\r\n);\r\n\r\nexport default Color;\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport Color from \"./color/Color\";\r\nimport { selectBrushColor } from \"../../../redux/actions/brushActions\";\r\nimport {\r\n\tselectPaletteColor,\r\n\tloadPaletteColors\r\n} from \"../../../redux/actions/paletteActions\";\r\nimport \"./Palette.css\";\r\n\r\nexport const Palette = ({\r\n\tselectedColor,\r\n\tcolors,\r\n\tselectBrushColor,\r\n\tselectPaletteColor,\r\n\tloadPaletteColors\r\n}) => {\r\n\tuseEffect(() => {\r\n\t\tif (colors.length === 0) loadPaletteColors([]);\r\n\t\tif (Object.entries(selectedColor).length === 0)\r\n\t\t\tselectColor({ id: 8000, hex: \"#008000\" });\r\n\t});\r\n\r\n\tconst selectColor = color => {\r\n\t\tselectPaletteColor(color);\r\n\t\tselectBrushColor(color.hex);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"paint-palette\">\r\n\t\t\t{colors.map(color => (\r\n\t\t\t\t<Color\r\n\t\t\t\t\tkey={color.id}\r\n\t\t\t\t\tcolor={color.hex}\r\n\t\t\t\t\tisSelected={color.id === selectedColor.id}\r\n\t\t\t\t\thandleOnClick={() => selectColor(color)}\r\n\t\t\t\t/>\r\n\t\t\t))}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nPalette.propTypes = {\r\n\tselectedColor: PropTypes.object.isRequired,\r\n\tcolors: PropTypes.array.isRequired,\r\n\tselectBrushColor: PropTypes.func.isRequired,\r\n\tselectPaletteColor: PropTypes.func.isRequired,\r\n\tloadPaletteColors: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state /*, ownProps */) => ({\r\n\tselectedColor: state.palette.selectedColor,\r\n\tcolors: state.palette.colors\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n\tselectBrushColor,\r\n\tselectPaletteColor,\r\n\tloadPaletteColors\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Palette);\r\n","import * as types from \"./actionTypes\";\r\n\r\nexport const selectBrushColor = selectedColor => ({\r\n\ttype: types.SELECT_BRUSH_COLOR,\r\n\tselectedColor\r\n});\r\n\r\nexport const selectBrushWeight = selectedWeight => ({\r\n\ttype: types.SELECT_BRUSH_WEIGHT,\r\n\tselectedWeight\r\n});\r\n","export const SELECT_BRUSH_COLOR = \"SELECT_BRUSH_COLOR\";\r\nexport const SELECT_BRUSH_WEIGHT = \"SELECT_BRUSH_WEIGHT\";\r\nexport const SAVE_CANVAS_LINES = \"SAVE_CANVAS_LINES\";\r\nexport const LOAD_CANVAS_LINES = \"LOAD_CANVAS_LINES\";\r\nexport const HISTORY_CANVAS_STEPS_BACK = \"HISTORY_CANVAS_STEPS_BACK\";\r\nexport const HISTORY_CANVAS_STEPS_FORWARD = \"HISTORY_CANVAS_STEPS_FORWARD\";\r\nexport const LOAD_PALETTE_COLORS = \"LOAD_PALETTE_COLORS\";\r\nexport const SELECT_PALETTE_COLOR = \"SELECT_PALETTE_COLOR\";\r\nexport const SELECT_WEIGHT = \"SELECT_WEIGHT\";\r\nexport const LOAD_WEIGHTS = \"LOAD_WEIGHTS\";\r\n","import * as types from \"./actionTypes\";\r\n\r\nexport const loadPaletteColors = colors => ({\r\n\ttype: types.LOAD_PALETTE_COLORS,\r\n\tcolors\r\n});\r\n\r\nexport const selectPaletteColor = selectedColor => ({\r\n\ttype: types.SELECT_PALETTE_COLOR,\r\n\tselectedColor\r\n});\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon as Icon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCheck } from \"@fortawesome/free-solid-svg-icons\";\r\nimport \"./WeightOption.css\";\r\n\r\nconst WeightOption = ({ weight, isSelected, handleClick }) => (\r\n\t<div onClick={handleClick} className=\"paint-brush-weightOption tool-btn\">\r\n\t\t<div\r\n\t\t\tclassName=\"paint-weightOption-line\"\r\n\t\t\tstyle={{ height: weight }}\r\n\t\t></div>\r\n\t\t{isSelected && <Icon icon={faCheck} />}\r\n\t</div>\r\n);\r\n\r\nexport default WeightOption;\r\n","import React, { useEffect } from \"react\";\r\nimport WeightOption from \"./weightOption/WeightOption\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n\tselectWeight,\r\n\tloadWeights\r\n} from \"../../../redux/actions/weightsActions\";\r\nimport { selectBrushWeight } from \"../../../redux/actions/brushActions\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./BrushWeight.css\";\r\n\r\nexport const BrushWeight = ({\r\n\tweights,\r\n\tselectWeight,\r\n\tselectedWeight,\r\n\tselectBrushWeight,\r\n\tloadWeights\r\n}) => {\r\n\tuseEffect(() => {\r\n\t\tif (weights.length === 0) loadWeights();\r\n\t});\r\n\r\n\tconst handleSelectWeight = weight => {\r\n\t\tselectWeight(weight);\r\n\t\tselectBrushWeight(weight);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"paint-brushWeight\">\r\n\t\t\t{weights.map((wg, i) => (\r\n\t\t\t\t<WeightOption\r\n\t\t\t\t\tkey={i}\r\n\t\t\t\t\tweight={wg}\r\n\t\t\t\t\tisSelected={wg === selectedWeight}\r\n\t\t\t\t\thandleClick={() => handleSelectWeight(wg)}\r\n\t\t\t\t/>\r\n\t\t\t))}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nBrushWeight.propTypes = {\r\n\tweights: PropTypes.array.isRequired,\r\n\tselectedWeight: PropTypes.number.isRequired,\r\n\tselectWeight: PropTypes.func.isRequired,\r\n\tselectBrushWeight: PropTypes.func.isRequired,\r\n\tloadWeights: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state /* , ownProps */) => ({\r\n\tweights: state.weights.all,\r\n\tselectedWeight: state.weights.selectedWeight\r\n});\r\n\r\nconst mapDsipatchToProps = { selectWeight, loadWeights, selectBrushWeight };\r\n\r\nexport default connect(mapStateToProps, mapDsipatchToProps)(BrushWeight);\r\n","import * as types from \"./actionTypes\";\r\n\r\nexport const selectWeight = selectedWeight => ({\r\n\ttype: types.SELECT_WEIGHT,\r\n\tselectedWeight\r\n});\r\n\r\nexport const loadWeights = () => ({\r\n\ttype: types.LOAD_WEIGHTS,\r\n\tweights: []\r\n});\r\n","import React from \"react\";\r\nimport \"./StepMove.css\";\r\n\r\nconst StepMove = ({ handleClick, icon }) => (\r\n\t<div className=\"paint-history-stepMove tool-btn\" onClick={handleClick}>\r\n\t\t{icon}\r\n\t</div>\r\n);\r\n\r\nexport default StepMove;\r\n","import * as types from \"./actionTypes\";\r\n\r\nexport const saveLines = lines => ({\r\n\ttype: types.SAVE_CANVAS_LINES,\r\n\tlines: lines\r\n});\r\n\r\nexport const loadLines = () => ({\r\n\ttype: types.LOAD_CANVAS_LINES,\r\n\tlines: []\r\n});\r\n\r\nexport const canvasHistoryStepBack = () => ({\r\n\ttype: types.HISTORY_CANVAS_STEPS_BACK,\r\n\tsteps: 1\r\n});\r\n\r\nexport const canvasHistoryStepForward = () => ({\r\n\ttype: types.HISTORY_CANVAS_STEPS_FORWARD,\r\n\tsteps: 1\r\n});\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { FontAwesomeIcon as Icon } from \"@fortawesome/react-fontawesome\";\r\nimport { faUndoAlt, faRedoAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport StepMove from \"./stepMove/StepMove\";\r\nimport {\r\n\tcanvasHistoryStepBack,\r\n\tcanvasHistoryStepForward\r\n} from \"../../../redux/actions/canvasActions\";\r\nimport \"./HistoryNavigator.css\";\r\n\r\nexport const HistoryNavigator = ({\r\n\tcanvasHistoryStepBack,\r\n\tcanvasHistoryStepForward\r\n}) => (\r\n\t<div className=\"paint-historyNavigator\">\r\n\t\t<StepMove\r\n\t\t\thandleClick={canvasHistoryStepBack}\r\n\t\t\ticon={<Icon icon={faUndoAlt} size=\"2x\" />}\r\n\t\t/>\r\n\t\t<StepMove\r\n\t\t\thandleClick={canvasHistoryStepForward}\r\n\t\t\ticon={<Icon icon={faRedoAlt} size=\"2x\" />}\r\n\t\t/>\r\n\t</div>\r\n);\r\n\r\nHistoryNavigator.propTypes = {\r\n\tcanvasHistoryStepBack: PropTypes.func.isRequired,\r\n\tcanvasHistoryStepForward: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state /*, ownProps */) => ({});\r\n\r\nconst mapDispatchToProps = {\r\n\tcanvasHistoryStepBack,\r\n\tcanvasHistoryStepForward\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HistoryNavigator);\r\n","import React from \"react\";\r\nimport Palette from \"./palette/Palette\";\r\nimport BrushWeight from \"./brushWeight/BrushWeight\";\r\nimport HistoryNavigator from \"./historyNavigator/HistoryNavigator\";\r\nimport \"./Tools.css\";\r\n\r\nconst Tools = () => (\r\n\t<div className=\"paint-tools\">\r\n\t\t<HistoryNavigator />\r\n\t\t<Palette />\r\n\t\t<BrushWeight />\r\n\t</div>\r\n);\r\n\r\nexport default Tools;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { render } from \"react-dom\"; //eslint-disable-line no-unused-vars\r\nimport PropTypes from \"prop-types\";\r\nimport { Stage, Layer, Line } from \"react-konva\";\r\nimport { saveLines, loadLines } from \"../../../redux/actions/canvasActions\";\r\n\r\nimport \"./Canvas.css\";\r\n\r\nexport class Canvas extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.props = props;\r\n\t}\r\n\r\n\tstate = {\r\n\t\tlines: this.props.lines || [],\r\n\t\tisDrawing: false\r\n\t};\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.stage = this.stageRef.getStage();\r\n\t\tthis.stage.setContainer(\"stage-parent\");\r\n\t\t/* mobile screen */\r\n\t\tthis.stage.on(\"touchstart\", this.handleMouseDown);\r\n\t\tthis.stage.on(\"touchmove\", this.handleMouseMove);\r\n\t\tthis.stage.on(\"touchend\", this.handleMouseUp);\r\n\t\t/* ------------- */\r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps) {\r\n\t\tloadLines();\r\n\t\tif (this.props.lines.length !== prevProps.lines.length)\r\n\t\t\tthis.setState({ lines: this.props.lines });\r\n\t}\r\n\r\n\thandleMouseDown = () => {\r\n\t\t// add line\r\n\t\tthis.setState({\r\n\t\t\tlines: [...this.props.lines, {}],\r\n\t\t\tisDrawing: true\r\n\t\t});\r\n\t};\r\n\r\n\thandleMouseMove = e => {\r\n\t\t// no drawing - skipping\r\n\t\tif (!this.state.isDrawing) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst point = this.stage.getPointerPosition();\r\n\t\tconst { lines } = this.state;\r\n\r\n\t\tlet lastLine = lines[lines.length - 1];\r\n\r\n\t\t// add point\r\n\t\tlastLine.points = lastLine.points\r\n\t\t\t? [...lastLine.points, point.x, point.y]\r\n\t\t\t: [point.x, point.y];\r\n\t\tlastLine.color = this.props.brushColor;\r\n\t\tlastLine.weight = this.props.brushWeight;\r\n\r\n\t\t// replace last\r\n\t\tconst newLines = lines.map(\r\n\t\t\t(line, i) => (i === lines.length - 1 && lastLine) || line\r\n\t\t);\r\n\r\n\t\tthis.setState({\r\n\t\t\tlines: newLines\r\n\t\t});\r\n\t};\r\n\r\n\thandleMouseUp = () => {\r\n\t\tthis.props.saveLines(this.state.lines);\r\n\r\n\t\tthis.setState({\r\n\t\t\tisDrawing: false\r\n\t\t});\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Stage\r\n\t\t\t\twidth={\r\n\t\t\t\t\t(window.innerWidth > 1024 && window.innerWidth * 0.75) ||\r\n\t\t\t\t\twindow.innerWidth\r\n\t\t\t\t}\r\n\t\t\t\theight={\r\n\t\t\t\t\t(window.innerWidth > 1024 && window.innerHeight * 0.9) ||\r\n\t\t\t\t\twindow.innerHeight * 0.5\r\n\t\t\t\t}\r\n\t\t\t\tonContentMousedown={this.handleMouseDown}\r\n\t\t\t\tonContentMousemove={this.handleMouseMove}\r\n\t\t\t\tonContentMouseup={this.handleMouseUp}\r\n\t\t\t\tref={node => {\r\n\t\t\t\t\tthis.stageRef = node;\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<Layer>\r\n\t\t\t\t\t{this.state.lines.map((line, i) => (\r\n\t\t\t\t\t\t<Line\r\n\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\tpoints={line.points}\r\n\t\t\t\t\t\t\tstroke={line.color}\r\n\t\t\t\t\t\t\tstrokeWidth={line.weight}\r\n\t\t\t\t\t\t\tlineCap=\"round\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</Layer>\r\n\t\t\t</Stage>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nCanvas.propTypes = {\r\n\tbrushColor: PropTypes.string.isRequired,\r\n\tbrushWeight: PropTypes.number.isRequired,\r\n\tlines: PropTypes.array.isRequired,\r\n\tsaveLines: PropTypes.func.isRequired,\r\n\tloadLines: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state /*, ownProps */) => ({\r\n\tbrushColor: state.brush.color,\r\n\tlines: state.canvas.lines,\r\n\tbrushWeight: state.brush.weight\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n\tsaveLines,\r\n\tloadLines\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Canvas);\r\n","import React from \"react\";\r\nimport Canvas from \"./canvas/Canvas\";\r\nimport \"./Display.css\";\r\n\r\nconst Display = () => (\r\n\t<div className=\"paint-display\">\r\n\t\t<div id=\"stage-parent\">\r\n\t\t\t<Canvas />\r\n\t\t</div>\r\n\t</div>\r\n);\r\nexport default Display;\r\n","import React from \"react\";\nimport Tools from \"./tools/Tools\";\nimport Display from \"./display/Display\";\nimport \"./App.css\";\n\nconst App = () => (\n\t<div className=\"app-container\">\n\t\t<Display />\n\t\t<Tools />\n\t</div>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initialState = {\r\n\tpalette: {\r\n\t\tcolors: [\r\n\t\t\t{ id: 1, hex: \"#ff5f00\" },\r\n\t\t\t{ id: 2, hex: \"#ff005f\" },\r\n\t\t\t{ id: 3, hex: \"#af0087\" },\r\n\t\t\t{ id: 4, hex: \"#8700d7\" },\r\n\t\t\t{ id: 5, hex: \"#2874A6\" },\r\n\t\t\t{ id: 6, hex: \"#EC7063\" },\r\n\t\t\t{ id: 7, hex: \"#AF7AC5\" },\r\n\t\t\t{ id: 8, hex: \"#5499C7\" },\r\n\t\t\t{ id: 9, hex: \"#5DADE2\" },\r\n\t\t\t{ id: 10, hex: \"#48C9B0\" },\r\n\t\t\t{ id: 11, hex: \"#52BE80\" },\r\n\t\t\t{ id: 12, hex: \"#58D68D\" },\r\n\t\t\t{ id: 13, hex: \"#F4D03F\" },\r\n\t\t\t{ id: 14, hex: \"#F5B041\" },\r\n\t\t\t{ id: 15, hex: \"#EB984E\" },\r\n\t\t\t{ id: 16, hex: \"#DC7633\" },\r\n\t\t\t{ id: 17, hex: \"#99A3A4\" },\r\n\t\t\t{ id: 18, hex: \"#5D6D7E\" },\r\n\t\t\t{ id: 19, hex: \"#1b2631\" },\r\n\t\t\t{ id: 20, hex: \"#ffffff\" }\r\n\t\t],\r\n\t\tselectedColor: { id: 19, hex: \"#1B2631\" }\r\n\t},\r\n\tweights: { all: [3, 6, 9, 12], selectedWeight: 6 },\r\n\tbrush: {\r\n\t\tcolor: \"#1B2631\",\r\n\t\tweight: 8\r\n\t},\r\n\tcanvas: {\r\n\t\tlines: [{ points: [], color: \"#000\", weight: 15 }],\r\n\t\thistory: {\r\n\t\t\tpast: { lines: [] },\r\n\t\t\tfuture: { lines: [] }\r\n\t\t}\r\n\t}\r\n};\r\n\r\nexport default initialState;\r\n","import { combineReducers } from \"redux\";\r\nimport brush from \"./brushReducer\";\r\nimport palette from \"./paletteReducer\";\r\nimport canvas from \"./canvasReducer\";\r\nimport weights from \"./weightsReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n\tbrush,\r\n\tpalette,\r\n\tcanvas,\r\n\tweights\r\n});\r\n\r\nexport default rootReducer;\r\n","import initialState from \"./initialState\";\r\nimport * as types from \"../actions/actionTypes\";\r\n\r\nexport default function brushReducer(state = initialState.brush, action) {\r\n\tswitch (action.type) {\r\n\t\tcase types.SELECT_BRUSH_COLOR:\r\n\t\t\treturn { ...state, color: action.selectedColor };\r\n\t\tcase types.SELECT_BRUSH_WEIGHT:\r\n\t\t\treturn { ...state, weight: action.selectedWeight };\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n","import initialState from \"./initialState\";\r\nimport * as types from \"../actions/actionTypes\";\r\n\r\nexport default function paletteReducer(state = initialState.palette, action) {\r\n\tswitch (action.type) {\r\n\t\tcase types.SELECT_PALETTE_COLOR:\r\n\t\t\treturn { ...state, selectedColor: action.selectedColor };\r\n\t\tcase types.LOAD_PALETTE_COLORS:\r\n\t\t\treturn { ...state, colors: [...state.colors, ...action.colors] };\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n","import initialState from \"./initialState\";\r\nimport * as types from \"../actions/actionTypes\";\r\n\r\nexport default function canvasReducer(state = initialState.canvas, action) {\r\n\tconst historyPast = state.history.past,\r\n\t\thistoryFuture = state.history.future;\r\n\tlet futureLines, pastLines;\r\n\tswitch (action.type) {\r\n\t\tcase types.LOAD_CANVAS_LINES:\r\n\t\t\treturn state;\r\n\t\tcase types.SAVE_CANVAS_LINES:\r\n\t\t\tpastLines = [...action.lines];\r\n\t\t\tfutureLines = [];\r\n\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tlines: action.lines,\r\n\t\t\t\thistory: {\r\n\t\t\t\t\t...state.history,\r\n\t\t\t\t\tpast: { ...historyPast, lines: pastLines },\r\n\t\t\t\t\tfuture: { ...historyFuture, lines: futureLines }\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\tcase types.HISTORY_CANVAS_STEPS_BACK:\r\n\t\t\tif (historyPast.lines.length === 0) return state;\r\n\t\t\tpastLines = state.lines.filter(\r\n\t\t\t\t(_, i, ls) => i < ls.length - action.steps\r\n\t\t\t);\r\n\t\t\tfutureLines = [\r\n\t\t\t\t...historyPast.lines.filter(\r\n\t\t\t\t\t(_, i, ls) => i >= ls.length - action.steps\r\n\t\t\t\t),\r\n\t\t\t\t...historyFuture.lines\r\n\t\t\t];\r\n\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tlines: pastLines,\r\n\t\t\t\thistory: {\r\n\t\t\t\t\t...state.history,\r\n\t\t\t\t\tpast: { ...historyPast, lines: pastLines },\r\n\t\t\t\t\tfuture: { ...historyFuture, lines: futureLines }\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\tcase types.HISTORY_CANVAS_STEPS_FORWARD:\r\n\t\t\tif (historyFuture.lines.length === 0) return state;\r\n\t\t\tpastLines = [\r\n\t\t\t\t...historyPast.lines,\r\n\t\t\t\t...historyFuture.lines.filter((_, i) => i < action.steps)\r\n\t\t\t];\r\n\t\t\tfutureLines = historyFuture.lines.filter(\r\n\t\t\t\t(_, i) => i > action.steps - 1\r\n\t\t\t);\r\n\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tlines: pastLines,\r\n\t\t\t\thistory: {\r\n\t\t\t\t\t...state.history,\r\n\t\t\t\t\tpast: { ...historyPast, lines: pastLines },\r\n\t\t\t\t\tfuture: { ...historyFuture, lines: futureLines }\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n","import initialState from \"./initialState\";\r\nimport * as types from \"../actions/actionTypes\";\r\n\r\nexport default function weightsReducer(state = initialState.weights, action) {\r\n\tswitch (action.type) {\r\n\t\tcase types.LOAD_WEIGHTS:\r\n\t\t\treturn { ...state, all: [...state.all, ...action.weights] };\r\n\t\tcase types.SELECT_WEIGHT:\r\n\t\t\treturn { ...state, selectedWeight: action.selectedWeight };\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport configureStore from \"./redux/configureStore\";\nimport { Provider as ReduxProvider } from \"react-redux\";\n\nconst store = configureStore();\n\nReactDOM.render(\n\t<ReduxProvider store={store}>\n\t\t<App />\n\t</ReduxProvider>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport rootReducer from \"./reducers\";\r\nimport reduxImmutableState from \"redux-immutable-state-invariant\";\r\n\r\nexport default function configureStore(initialState) {\r\n\tconst composeEnhancers =\r\n\t\twindow.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose; //add suport por redux dev tools\r\n\r\n\treturn createStore(\r\n\t\trootReducer,\r\n\t\tinitialState,\r\n\t\tcomposeEnhancers(applyMiddleware(reduxImmutableState()))\r\n\t);\r\n}\r\n"],"sourceRoot":""}